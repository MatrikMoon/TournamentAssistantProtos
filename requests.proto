syntax = "proto3";
package proto.packets;

option csharp_namespace = "TournamentAssistantShared.Models.Packets";

import "models.proto";

// ---- Requests (GET (or do?) something where you need a response!) ---- //
message Request {
  //--- State Update Requests ---//
  message UpdateUser {
    string tournamentId = 1;
    models.User user = 2;
  }

  message CreateMatch {
    string tournamentId = 1;
    models.Match match = 2;
  }

  message UpdateMatch {
    string tournamentId = 1;
    models.Match match = 2;
  }

  message DeleteMatch {
    string tournamentId = 1;
    models.Match match = 2;
  }

  message CreateQualifierEvent {
    string tournamentId = 1;
    models.QualifierEvent event = 2;
  }

  message UpdateQualifierEvent {
    string tournamentId = 1;
    models.QualifierEvent event = 2;
  }

  message DeleteQualifierEvent {
    string tournamentId = 1;
    models.QualifierEvent event = 2;
  }

  message CreateTournament {
    models.Tournament tournament = 1;
  }

  message UpdateTournament {
    models.Tournament tournament = 1;
  }

  message DeleteTournament {
    models.Tournament tournament = 1;
  }

  message AddServer {
    models.CoreServer server = 1;
    string auth_token = 2;
  }

  // Probably not needed? If someone wants to remove their server from the list, they can just shut it down
  // message DeleteServer {
  //   models.CoreServer server = 1;
  //   string auth_token = 2;
  // }

  // -- Other Requests -- //
  message Connect {
    int32 client_version = 1;
  }

  message Join {
    string tournament_id = 1;
    string password = 2;
  }

  message QualifierScores {
    string event_id = 1;
    string map_id = 2;
  }

  message SubmitQualifierScore {
    models.LeaderboardScore qualifier_score = 1;
    models.GameplayParameters map = 2;
  }

  message LoadSong {
    string level_id = 1;
    string custom_host_url = 2;
  }

  message PreloadImageForStreamSync {
    string file_id = 1;
    bool compressed = 2;
    bytes data = 3;
  }

  message ShowModal {
    string modal_id = 1;
    string message_title = 2;
    string message_text = 3;
    bool can_close = 4;
    models.ModalOption option_1 = 5;
    models.ModalOption option_2 = 6;
  }

  message RemainingAttempts {
    string event_id = 1;
    string map_id = 2;
  }

  oneof type {
    UpdateUser update_user = 1;
    CreateMatch create_match = 2;
    UpdateMatch update_match = 3;
    DeleteMatch delete_match = 4;
    CreateQualifierEvent create_qualifier_event = 5;
    UpdateQualifierEvent update_qualifier_event = 6;
    DeleteQualifierEvent delete_qualifier_event = 7;
    CreateTournament create_tournament = 8;
    UpdateTournament update_tournament = 9;
    DeleteTournament delete_tournament = 10;
    AddServer add_server = 11;
    Connect connect = 12;
    Join join = 13;
    QualifierScores qualifier_scores = 14;
    SubmitQualifierScore submit_qualifier_score = 15;
    LoadSong load_song = 16;
    PreloadImageForStreamSync preload_image_for_stream_sync = 17;
    ShowModal show_modal = 18;
    RemainingAttempts remaining_attemtps = 19;
  }
}